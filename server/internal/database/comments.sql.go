// Code generated by sqlc. DO NOT EDIT.
// versions:
//   sqlc v1.27.0
// source: comments.sql

package database

import (
	"context"

	"github.com/google/uuid"
)

const createComment = `-- name: CreateComment :one
INSERT INTO comments (content, thread_id, creator_id)
VALUES ($1, $2, $3)
RETURNING id, content, thread_id, creator_id, created_timestamp, updated_timestamp
`

type CreateCommentParams struct {
	Content   string
	ThreadID  int32
	CreatorID uuid.UUID
}

func (q *Queries) CreateComment(ctx context.Context, arg CreateCommentParams) (Comment, error) {
	row := q.db.QueryRowContext(ctx, createComment, arg.Content, arg.ThreadID, arg.CreatorID)
	var i Comment
	err := row.Scan(
		&i.ID,
		&i.Content,
		&i.ThreadID,
		&i.CreatorID,
		&i.CreatedTimestamp,
		&i.UpdatedTimestamp,
	)
	return i, err
}
